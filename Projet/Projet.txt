Dragon ball en PHP:

Objectif : L'objectif de ce TP est de créer un jeu basé sur l'univers de Dragon Ball en utilisant la programmation orientée objet, avec la possibilité de participer à plusieurs combats et de débloquer de nouvelles attaques.

Description du Projet :

Vous allez créer un jeu simple basé sur l'univers de Dragon Ball en utilisant PHP et la programmation orientée objet. Le jeu consistera en la création de personnages, la gestion de leurs attributs (niveau de puissance, points de vie, etc.), et des combats entre ces personnages. Après chaque combat, les personnages gagneront en puissance et débloqueront de nouvelles attaques.

Étapes du Projet :

1. Création de classes :

Créez des classes pour les personnages, y compris les héros (Goku, Vegeta, etc.) et les méchants (Freezer, Cell, etc.). Chaque classe doit avoir des attributs tels que le nom, le niveau de puissance, les points de vie, etc.

2. Héritage :

Utilisez l'héritage pour créer des classes de
personnages héroïques et maléfiques qui héritent des attributs et des méthodes de la classe de base "Personnage".

3. Méthodes et actions :

Ajoutez des méthodes aux classes de personnages
pour gérer les actions comme "attaquer", "prendre des dégâts" et "mourir". Les méthodes spécifiques à chaque classe peuvent modifier ces actions en fonction du type de personnage (héros ou méchant).

4. Système de combat :

Développez un système de combat qui permettra aux personnages de s'affronter. Le combat doit tenir compte des attributs de chaque personnage (niveau de puissance, points de vie, etc.). Vous pouvez créer des méthodes pour gérer les combats.

5. Gestion des statistiques :

Affichez les statistiques des personnages pendant le jeu, y compris leur niveau de puissance, leurs points de vie, etc. Vous pouvez créer des méthodes pour afficher ces statistiques.

6. Gestion de la victoire et de la défaite :

Écrivez du code PHP pour déterminer le vainqueur du combat et mettez en place des conditions de victoire ou de défaite. Après chaque combat, le personnage gagnant gagne en puissance.

7. Déblocage de nouvelles attaques :

Après le premier combat, le personnage gagnant doit débloquer une nouvelle attaque "Kamehameha". Vous pouvez créer une méthode pour gérer le déblocage de cette nouvelle attaque. Libre à vous de débloquer plus d’attaque.

8. Création de plusieurs combats :

Créez au moins trois combats différents, avec des
personnages différents. Après chaque combat, mettez en place un nouveau combat avec de nouveaux personnages.

9. Système de sauvegarde :

Créez un système de sauvegarde qui permettra à l'utilisateur de reprendre le jeu où il s'est arrêté.

10. Système d'objectifs :

Ajoutez un système d'objectifs. Par exemple, après X combats, vous gagnez le jeu.

11. Documentation et Commentaires :

Commentez abondamment votre code pour expliquer le rôle de chaque classe, méthode et variable.







Pour l'attaque on 